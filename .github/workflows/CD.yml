name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: lotto-pilot

    steps: 
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: application.yaml 생성
      run: | 
          mkdir ./src/main/resources # resources 폴더 생성
          cd src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./application.yml

    - name: 빌드
      run: |
          chmod +x gradlew
          ./gradlew build -x test
      shell: bash

######## 여기까지는 CI.yaml와 동일 #########

    - name: docker build 가능하도록 환경 설정
      uses: docker/setup-buildx-action@v2.9.1
      
    - name: docker hub에로그인
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
        password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

    - name: Build and Push Docker Image  # Docker 이미지 빌드 및 푸시
      uses: docker/build-push-action@v4
      with:
        context: .  # 현재 디렉토리를 컨텍스트로 사용
        file: ./Dockerfile  # Dockerfile 위치
        push: true  # 이미지를 Docker Hub에 푸시
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/lotto-pilot  # 이미지 태그 설정
      

  deploy-cd:      
    needs: deploy-ci
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to Lotto-Pilot Server  # 원격 서버에 배포
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.RELEASE_HOST }}  # 원격 서버 주소
          username: ${{ secrets.RELEASE_USERNAME }}  # 원격 서버 사용자 이름
          key: ${{ secrets.RELEASE_KEY }}  # 원격 서버 SSH 키
          script: |  # 원격 서버에서 실행할 스크립트
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/lotto-pilot  # 최신 Docker 이미지 풀링
            if sudo docker ps -q --filter "name=lotto-pilot-8080"; then
              sudo docker stop lotto-pilot-8080
              sudo docker rm lotto-pilot-8080
              sudo docker run -d -p 8081:8081 --name lotto-pilot-8081 --restart=always ${{ secrets.DOCKERHUB_USERNAME }}/lotto-pilot
            else
              sudo docker stop lotto-pilot-8081 || true
              sudo docker rm lotto-pilot-8081 || true
              sudo docker run -d -p 8080:8080 --name lotto-pilot-8080 --restart=always ${{ secrets.DOCKERHUB_USERNAME }}/lotto-pilot
            fi
